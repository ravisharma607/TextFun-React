{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","mode","href","title","type","id","placeholder","onClick","toggleMoe","htmlFor","TextForm","useState","text","setText","style","color","heading","backgroundColor","rows","value","onChange","event","target","newText","toUpperCase","showAlert","toLowerCase","replace","trim","document","getElementById","select","navigator","clipboard","writeText","innerHTML","split","length","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","prototype","PropTypes","string","isRequired","aboutText","defaultProps","App","setmode","setAlert","message","setTimeout","services","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.45c7889f.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            <li className=\"nav-item\">\r\n              <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li>\r\n            {/* <li className=\"nav-item\">\r\n              <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\r\n            </li> */}\r\n          </ul>\r\n          <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-warning\" type=\"submit\">Search</button>\r\n          </form>\r\n\r\n          <div className={`custom-control custom-switch text-${props.mode === `light` ? `dark` : `light`}`}>\r\n            <input type=\"checkbox\" className=\"custom-control-input mx-2\" onClick={props.toggleMoe} id=\"customSwitches\" />\r\n            <label className=\"custom-control-label\" htmlFor=\"customSwitches\">Mode</label>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nNavbar.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n}\r\nNavbar.defaultProps = {\r\n  title: 'Your Title here',\r\n  aboutText: 'About here',\r\n}","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick =()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert('Converted TO UpperCase','success')\r\n    }\r\n    const handleLowClick=()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert('Converted TO LowerCase','success')\r\n    }\r\n    const handleClearClick=()=>{\r\n        let newText = '';\r\n        setText(newText);\r\n    }\r\n    const handleExtraSpaces=()=>{\r\n        let newText = text.replace(/\\s+/g, ' ').trim();\r\n        setText(newText);\r\n        props.showAlert('Extra Spaces Has Been Removed','success')\r\n    }\r\n    const handleCopy=()=>{\r\n        let newText = document.getElementById('mybox');\r\n        newText.select();\r\n        navigator.clipboard.writeText(newText.value);\r\n        const element = document.getElementById(\"getText\");\r\n        element.innerHTML = \"Copied\";\r\n        props.showAlert('Copied To ClipBoard','success')\r\n    }\r\n\r\n    const handleOnChange =(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const [text,setText] = useState('');\r\n    return (\r\n        <>\r\n        <div className=\"container\" style= {{color: (props.mode === 'dark')?'cyan':'black'}}>\r\n            <h1>{props.heading}</h1>\r\n            <div className=\"mb-3\">\r\n<textarea className=\"form-control\" style= {{backgroundColor: (props.mode === 'dark')?'white':'black',color: (props.mode === 'dark')?'black':'white'}} id=\"mybox\" rows=\"8\" value = {text} onChange = {handleOnChange}></textarea>\r\n            </div>\r\n            <button className=\"btn btn-primary\" onClick={handleUpClick}>Convert To UpperCase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleLowClick}>Convert To LowerCase</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n            <button className=\"btn btn-primary mx-2\" id='getText' onClick={handleCopy}>Copy Text</button>\r\n            <button className=\"btn btn-primary mx-2\" onClick={handleClearClick}>Clear Text</button>\r\n        </div>\r\n        <div className=\"container my-3\"style= {{color: (props.mode === 'dark')?'cyan':'black'}}>\r\n            <h1>Your Text Summary</h1>\r\n\r\n            <p>{text.split(\" \").length} words, {text.length} Characters</p>\r\n            <p>{0.008 * text.split(\" \").length} Minutes To Read</p>\r\n        </div>\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)} </strong>{props.alert.msg}\r\n     </div>\r\n    )\r\n}\r\n","\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n\nconst [mode, setmode] = useState('light');  //whether dark mode is enabled or not\nconst [alert, setAlert] = useState(null);\nconst showAlert = (message, type)=>{\n  setAlert({\n    msg:message,\n    type:type\n  })\nsetTimeout(() => {\n  setAlert(null);\n}, 1500);\n}\n\n\nconst toggleMoe = ()=>{\n  if(mode === 'light'){\n    setmode('dark');\n    document.body.style.backgroundColor = 'black';\n    showAlert('Dark Mode Has Been Enabled','success')\n    document.title = 'TextFun - Dark Mode';\n  }\n  else{\n    setmode('light');\n    document.body.style.backgroundColor = 'white';\n    showAlert('Light Mode Has Been Enabled','success')\n    document.title = 'TextFun - Light Mode';\n  }\n}\n  return (\n    <>\n\n    {/* Navbar section */}\n\n{/* Alert se ction */}\n     {/* <Router> */}\n      <Navbar title = 'TextFun' aboutText = 'About TexFun' services = 'Our Services' mode = {mode} toggleMoe = {toggleMoe}></Navbar>\n     <Alert alert ={alert}/>\n     <div className=\"container my-3\">\n    {/* <Switch>\n          <Route exact path=\"/about\">\n            <About />\n          </Route>\n          <Route exact path=\"/\"> */}\n          <TextForm heading = 'Enter Your Text To Perform Tasks' mode={mode} showAlert = {showAlert} />\n          {/* </Route>\n        </Switch> */}\n     </div>\n    {/* </Router> */}\n\n    </>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}