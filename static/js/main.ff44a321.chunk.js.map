{"version":3,"sources":["components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","className","href","type","id","mode","style","height","width","onClick","toggleMoe","htmlFor","color","fontWeight","TextForm","useState","text","setText","heading","backgroundColor","rows","value","onChange","event","target","disabled","length","newText","toUpperCase","showAlert","toLowerCase","replace","trim","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","innerHTML","split","filter","element","Alert","alert","role","word","lower","charAt","slice","capitalize","msg","prototype","title","PropTypes","string","isRequired","aboutText","defaultProps","App","setmode","setAlert","message","setTimeout","services","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ff44a321.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function Navbar(props) {\r\n  \r\n  return (\r\n    <nav className= \"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n   \r\n      <div className=\"container-fluid\">\r\n        <a className=\"navbar-brand\" href=\"#\"><span>T</span>ext<span>F</span>un</a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n          <span className=\"navbar-toggler-icon\"></span>\r\n        </button>\r\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n          <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-a active\" aria-current=\"page\" href=\"#\">Home</a>\r\n            </li> */}\r\n            {/* <li className=\"nav-item\">\r\n              <a className=\"nav-a\" href=\"/about\">{props.aboutText}</a>\r\n            </li> */}\r\n          </ul>\r\n          {/* <form className=\"d-flex\">\r\n            <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\r\n            <button className=\"btn btn-warning\" type=\"submit\">Search</button>\r\n          </form> */}\r\n\r\n         <div className=\"modeControl\">\r\n         <div className={`custom-control d-flex custom-switch text-${props.mode === `light` ? `dark` : `light`}`}>\r\n            <input style={{height:'42px',width:'30px'}} type=\"checkbox\" className=\"custom-control-input mx-2 mt-2\" onClick={props.toggleMoe} id=\"customSwitches\" />\r\n            <label className=\"mode custom-control-label\" htmlFor=\"customSwitches\" style= {{color: (props.mode === 'dark')?'cyan':'white'}}>m<span  style= {{color: (props.mode === 'dark')?'slateblue':'blue',fontWeight:'bolder'}}>O</span>de</label>\r\n          </div>\r\n         </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nNavbar.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  aboutText: PropTypes.string.isRequired,\r\n}\r\nNavbar.defaultProps = {\r\n  title: 'Your Title here',\r\n  aboutText: 'About here',\r\n}","import React,{useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick =()=>{\r\n        let newText = text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert('Converted TO UpperCase','success')\r\n    }\r\n    const handleLowClick=()=>{\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert('Converted TO LowerCase','success')\r\n    }\r\n    const handleClearClick=()=>{\r\n        let newText = '';\r\n        setText(newText);\r\n    }\r\n    const handleExtraSpaces=()=>{\r\n        let newText = text.replace(/\\s+/g, ' ').trim();\r\n        setText(newText);\r\n        props.showAlert('Extra Spaces Has Been Removed','success')\r\n    }\r\n    const handleCopy=()=>{\r\n        let newText = document.getElementById('mybox');\r\n        newText.select();\r\n        navigator.clipboard.writeText(newText.value);\r\n        document.getSelection().removeAllRanges();\r\n        const element = document.getElementById(\"getText\");\r\n        element.innerHTML = \"Copied\";\r\n        props.showAlert('Copied To ClipBoard','success')\r\n    }\r\n\r\n    const handleOnChange =(event)=>{\r\n        setText(event.target.value);\r\n    }\r\n    const [text,setText] = useState('');\r\n    return (\r\n        <>\r\n        <div className=\"container\" style= {{color: (props.mode === 'dark')?'cyan':'black'}}>\r\n            <h3 >{props.heading}</h3>\r\n            <hr />\r\n            <div className=\"mb-3\">\r\n<textarea className=\"form-control\" style= {{backgroundColor: (props.mode === 'dark')?'white':'black',color: (props.mode === 'dark')?'black':'white'}} id=\"mybox\" rows=\"8\" value = {text} onChange = {handleOnChange}></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"btn btn-primary my-1\" onClick={handleUpClick}>Convert To UpperCase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleLowClick}>Convert To LowerCase</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleExtraSpaces}>Remove Extra Spaces</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" id='getText' onClick={handleCopy}>Copy Text</button>\r\n            <button disabled={text.length===0} className=\"btn btn-primary mx-2 my-1\" onClick={handleClearClick}>Clear Text</button>\r\n        </div>\r\n        <hr style= {{color: (props.mode === 'dark')?'cyan':'black'}} />\r\n        <div className=\"container my-1\"style= {{color: (props.mode === 'dark')?'cyan':'black'}}>\r\n            <h1>Your Text Summary</h1>\r\n            <p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words, {text.length} Characters</p>\r\n            <p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minutes To Read</p>\r\n        </div>\r\n        <hr style= {{color: (props.mode === 'dark')?'cyan':'black'}} />\r\n        </>\r\n    )\r\n}","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const capitalize = (word)=>{\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n       <div style={{height:'50px'}}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{capitalize(props.alert.type)} </strong>{props.alert.msg}\r\n     </div>}\r\n       </div>\r\n    )\r\n}\r\n","\nimport './App.css';\n// import About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport React, { useState } from 'react';\nimport Alert from './components/Alert';\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setmode] = useState('light');  //whether dark mode is enabled or not\n  const [alert, setAlert] = useState(null);\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n\n  const toggleMoe = () => {\n    if (mode === 'light') {\n      setmode('dark');\n      document.body.style.backgroundColor = 'black';\n      showAlert('Dark Mode Has Been Enabled', 'success')\n    }\n    else {\n      setmode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert('Light Mode Has Been Enabled', 'success')\n    }\n  }\n  return (\n    <>\n\n      {/*---------------------- BECAUSE ROUTER DOESN'T WORKS GOOD WITH GITHUB PAJES ----------------------*/}\n\n      {/* <Router>\n      <Navbar title = 'TextFun' aboutText = 'About Us' services = 'Our Services' mode = {mode} toggleMoe = {toggleMoe}></Navbar>\n     <Alert alert ={alert}/>\n     <div className=\"container my-3\">\n    <Switch>\n          <Route exact path=\"/about\">\n            <About mode = {mode} />\n          </Route>\n          <Route exact path=\"/\">\n          <TextForm heading = 'Try TextFun - Word Counter, Character Counter, Remove Extra Spaces and Many More.' mode={mode} showAlert = {showAlert} />\n          </Route>\n        </Switch>\n     </div>\n    </Router> */}\n\n      {/*------------------------------- SO WE WILL HOST WITHOUT ROUTER -------------------------------------- */}\n\n\n      <Navbar aboutText='About Us' services='Our Services' mode={mode} toggleMoe={toggleMoe}></Navbar>\n      <Alert alert={alert} />\n      <div className=\"container my-3\">\n        <TextForm heading='Try TextFun - Word Counter, Character Counter, Remove Extra Spaces and Many More.' mode={mode} showAlert={showAlert} />\n      </div>\n\n    </>\n  );\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}